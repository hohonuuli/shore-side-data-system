# These are database specific statements that are needed by the SSDS.  
# Unfortunately there is no single way to do some things for all database 
# types, so you have to configure this manually.  Basically you write the 
# SQL statements that will accomplish the goals for you database and then 
# replace the device ID with @DEVICE_ID@.  The system will then replace that 
# with the actual device ID when running the SQL statement.  This file
# contains the properties for MS SQL databases

#####################################################################
##                    DataSource Properties                        ##
#####################################################################
# Database driver file
database.driver.jar.file=jtds-1.2.2.jar

# Database driver class
database.driver.class=net.sourceforge.jtds.jdbcx.JtdsDataSource

# This is the SQL that is executed to make sure the connection if valid
database.check.valid.connection.sql=SELECT 1 FROM sysobjects

# Database source type mapping (tested options are 'MS SQLSERVER2000'|'mySQL')
database.driver.type.mapping=MS SQLSERVER2000

# Database connection URL for data storage
database.data.driver.url=jdbc:jtds:sqlserver://${database.server.name}:1433/${database.data.name}

# Database connection URL for metadata storage
database.metadata.driver.url=jdbc:jtds:sqlserver://${database.server.name}:1433/${database.metadata.name}

#####################################################################
##                       SQL I/O Properties                        ##
#####################################################################
io.storage.sql.find.table=SELECT name FROM dbo.sysobjects WHERE (name LIKE '@DEVICE_ID@')
io.storage.sql.create.device.table=CREATE TABLE [dbo].[@DEVICE_ID@] ([ssdsPacketVersion] [int] NOT NULL,[parentID] [bigint] NOT NULL,[packetType] [int] NOT NULL,[packetSubType] [bigint] NOT NULL,[dataDescriptionID] [bigint] NOT NULL,[dataDescriptionVersion] [bigint] NOT NULL,[timestampSeconds] [bigint] NOT NULL,[timestampNanoseconds] [bigint] NOT NULL,[sequenceNumber] [bigint] NULL ,[bufferLen] [int] NULL ,[bufferBytes] [image] NULL ,[bufferTwoLen] [int] NULL ,[bufferTwoBytes] [image] NULL,[latitude] [decimal] NULL,[longitude] [decimal] NULL,[depth] [float] NULL) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
io.storage.sql.create.device.table.primary.key=ALTER TABLE [dbo].[@DEVICE_ID@] WITH NOCHECK ADD CONSTRAINT [PK_@DEVICE_ID@] PRIMARY KEY  CLUSTERED ([parentID],[packetType],[packetSubType],[dataDescriptionID],[dataDescriptionVersion],[timestampSeconds],[timestampNanoseconds]) ON [PRIMARY]
io.storage.sql.create.device.table.index=CREATE INDEX [IX_Timestamp] ON [dbo].[@DEVICE_ID@]([timestampSeconds], [timestampNanoseconds]) ON [PRIMARY]
io.storage.sql.table.delimiter="
io.storage.sql.lastnumber.preamble=(SELECT TOP @LAST_NUMBER_OF_PACKETS@ * FROM 
io.storage.sql.lastnumber.postamble= ORDER BY timestampSeconds DESC, timestampNanoseconds DESC) DERIVEDTBL


#io.storage.sql.template.count.number.of.rows=SELECT COUNT(*) FROM `ssds_data`.`@DEVICE_ID@`
#io.storage.sql.template.count.number.of.rows.with.record.type=SELECT COUNT(*) FROM `ssds_data`.`@DEVICE_ID@` WHERE packetSubType = @RECORD_TYPE@
#io.storage.sql.template.latest.timestamp.seconds=SELECT MAX(timestampSeconds) AS maxseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds < @CURRENT_TIMESTAMP_SECONDS@
#io.storage.sql.template.latest.timestamp.seconds.with.record.type=SELECT MAX(timestampSeconds) AS maxseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds < @CURRENT_TIMESTAMP_SECONDS@ AND packetSubType = @RECORD_TYPE@
#io.storage.sql.template.latest.timestamp.nanoseconds=SELECT MAX(timestampNanoseconds) AS maxnanoseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds = @TIMESTAMP_SECONDS@
#io.storage.sql.template.latest.timestamp.nanoseconds.with.record.type=SELECT MAX(timestampNanoseconds) AS maxnanoseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds = @TIMESTAMP_SECONDS@ AND packetSubType = @RECORD_TYPE@
#io.storage.sql.template.select.packets.by.time=SELECT * FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds > @START_TIMESTAMP_WINDOW_SECONDS@ AND timestampSeconds < @END_TIMESTAMP_WINDOW_SECONDS@ ORDER BY timestampSeconds ASC, timestampNanoseconds ASC 
#io.storage.sql.template.select.packets.by.time.with.record.type=SELECT * FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds > @START_TIMESTAMP_WINDOW_SECONDS@ AND timestampSeconds < @END_TIMESTAMP_WINDOW_SECONDS@ AND packetSubType = @RECORD_TYPE@ ORDER BY timestampSeconds ASC, timestampNanoseconds ASC 

#####################################################################
##                     Hibernate Properties                        ##
#####################################################################
# Database schema that might be used for some drivers.  For
# example, for MSSQL, you might set it to the username that
# is creating the database (${database.server.login.username})
# and for MySQL, you would leave it blank
hibernate.schema=${database.server.login.username}

# This is the property that tells Hibernate what sql server you
# are using for the metadata persistence.  Some examples are:
# For MS SQL Server = org.hibernate.dialect.SQLServerDialect
# For MySQL = org.hibernate.dialect.MySQLDialect
hibernate.dialect=org.hibernate.dialect.SQLServerDialect

