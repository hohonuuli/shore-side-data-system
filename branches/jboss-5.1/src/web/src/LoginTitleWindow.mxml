<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2009 MBARI
	
  Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1 
  (the "License"); you may not use this file except in compliance 
  with the License. You may obtain a copy of the License at

  http://www.gnu.org/copyleft/lesser.html

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="334" height="204" initialize="initializeHandler();" creationComplete="creationCompleteHandler();">
<mx:Script>
	<![CDATA[
		import moos.ssds.web.UserInformation;
		import mx.containers.TitleWindow;
		import mx.rpc.remoting.mxml.RemoteObject;
		import mx.managers.PopUpManager;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.Fault;
		import mx.controls.Alert;
		import mx.rpc.AsyncToken;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.AsyncResponder;
		import mx.messaging.config.ServerConfig;
		import mx.messaging.ChannelSet;

		// The shared object that will be used to store user information
		[Bindable]
		public var userInformationObject:UserInformation = UserInformation.getInstance();
		
		// This is the method that handles the initialize event.  It basically
		// acts like a constructor for the MXML component.
		private function initializeHandler():void {
			// Set things up depending on whether the user is logged in or not
			if (userInformationObject.getUsername() != "Guest") {
				formHeading.visible = false;
				usernameFormItem.visible = false;
				passwordFormItem.visible = false;
				loginLogoutButton.label = "Logout";
			} else {
				formHeading.visible = true;
				usernameFormItem.visible = true;
				passwordFormItem.visible = true;
				usernameTextInput.enabled = true;
				passwordTextInput.enabled = true;
				loginLogoutButton.label = "Login";
			}
			
			// Register an event handler on the UserInformation object
			userInformationObject.addEventListener(UserInformation.LOGIN_SUCCEEDED,loginSucceededEventHandler);
			userInformationObject.addEventListener(UserInformation.LOGIN_FAILED,loginFailedEventHandler);
			userInformationObject.addEventListener(UserInformation.LOGOUT_SUCCEEDED,logoutSucceededEventHandler);
			userInformationObject.addEventListener(UserInformation.LOGOUT_FAILED,logoutFailedEventHandler);
		}
		
		// A function that runs when the creation of this component is complete
		private function creationCompleteHandler():void {
		}

		// The event handler for successful logins
		private function loginSucceededEventHandler(event:Event):void {
			// Remove the window
			PopUpManager.removePopUp(this);
		}
		 
		// The event handler for failed logins
		private function loginFailedEventHandler(event:Event):void {
			Alert.show("Login Failed: " + event.toString());
			// Remove the window
			PopUpManager.removePopUp(this);
		}
		 
		// The event handler for successful logouts
		private function logoutSucceededEventHandler(event:Event):void {
			// Remove the window
			PopUpManager.removePopUp(this);
		}
		 
		// The event handler for failed logouts
		private function logoutFailedEventHandler(event:Event):void {
			Alert.show("Login Failed: " + event.toString());
			// Remove the window
			PopUpManager.removePopUp(this);
		}
		 
		// The function that is executed when the login/logout button is clicked
		private function loginLogout():void {
			// If the user is not logged in, use the text fields to login, else logout
			if (userInformationObject.getUsername() != "Guest") {
				userInformationObject.logout();
			} else {
				userInformationObject.login(usernameTextInput.text,passwordTextInput.text);
			}
		}
		
		// The function to cancel the login/logout and close the window
		private function cancel():void {
			PopUpManager.removePopUp(this);
			userInformationObject.refresh();
		}
		
	]]>
</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:Form width="100%" height="100%">
			<mx:FormHeading id="formHeading" label="Enter Login Information"/>
			<mx:FormItem id="usernameFormItem" label="Username">
				<mx:TextInput id="usernameTextInput"/>
			</mx:FormItem>
			<mx:FormItem id="passwordFormItem" label="Password" x="0" y="0">
				<mx:TextInput id="passwordTextInput" displayAsPassword="true" enter="loginLogout();"/>
			</mx:FormItem>
		</mx:Form>
		<mx:Tile width="100%">
			<mx:Button id="loginLogoutButton" label="Login/Logout" click="loginLogout();"/>
			<mx:Button label="Cancel" click="cancel();"/>
		</mx:Tile>
	</mx:VBox>
</mx:TitleWindow>
