/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (DataContainer.as).
 */

package moos.ssds.metadata {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class DataContainerBase implements IExternalizable, IMetadataObject, IDescription, IResourceOwner, IDateRange {

        private var _consumers:ListCollectionView;
        private var _contentLength:Number;
        private var _creator:DataProducer;
        private var _dataContainerGroups:ListCollectionView;
        private var _dataContainerType:String;
        private var _description:String;
        private var _dodsAccessible:Boolean;
        private var _dodsUrlString:String;
        private var _endDate:Date;
        private var _headerDescription:HeaderDescription;
        private var _id:Number;
        private var _keywords:ListCollectionView;
        private var _maxDepth:Number;
        private var _maxLatitude:Number;
        private var _maxLongitude:Number;
        private var _mimeType:String;
        private var _minDepth:Number;
        private var _minLatitude:Number;
        private var _minLongitude:Number;
        private var _name:String;
        private var _noNetCDF:Boolean;
        private var _numberOfRecords:Number;
        private var _original:Boolean;
        private var _person:Person;
        private var _recordDescription:RecordDescription;
        private var _resources:ListCollectionView;
        private var _startDate:Date;
        private var _uriString:String;
        private var _version:Number;

        public function set consumers(value:ListCollectionView):void {
            _consumers = value;
        }
        public function get consumers():ListCollectionView {
            return _consumers;
        }

        public function set contentLength(value:Number):void {
            _contentLength = value;
        }
        public function get contentLength():Number {
            return _contentLength;
        }

        public function set creator(value:DataProducer):void {
            _creator = value;
        }
        public function get creator():DataProducer {
            return _creator;
        }

        public function set dataContainerGroups(value:ListCollectionView):void {
            _dataContainerGroups = value;
        }
        public function get dataContainerGroups():ListCollectionView {
            return _dataContainerGroups;
        }

        public function set dataContainerType(value:String):void {
            _dataContainerType = value;
        }
        public function get dataContainerType():String {
            return _dataContainerType;
        }

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set dodsAccessible(value:Boolean):void {
            _dodsAccessible = value;
        }
        public function get dodsAccessible():Boolean {
            return _dodsAccessible;
        }

        public function set dodsUrlString(value:String):void {
            _dodsUrlString = value;
        }
        public function get dodsUrlString():String {
            return _dodsUrlString;
        }

        public function set endDate(value:Date):void {
            _endDate = value;
        }
        public function get endDate():Date {
            return _endDate;
        }

        public function set headerDescription(value:HeaderDescription):void {
            _headerDescription = value;
        }
        public function get headerDescription():HeaderDescription {
            return _headerDescription;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set keywords(value:ListCollectionView):void {
            _keywords = value;
        }
        public function get keywords():ListCollectionView {
            return _keywords;
        }

        public function set maxDepth(value:Number):void {
            _maxDepth = value;
        }
        public function get maxDepth():Number {
            return _maxDepth;
        }

        public function set maxLatitude(value:Number):void {
            _maxLatitude = value;
        }
        public function get maxLatitude():Number {
            return _maxLatitude;
        }

        public function set maxLongitude(value:Number):void {
            _maxLongitude = value;
        }
        public function get maxLongitude():Number {
            return _maxLongitude;
        }

        public function set mimeType(value:String):void {
            _mimeType = value;
        }
        public function get mimeType():String {
            return _mimeType;
        }

        public function set minDepth(value:Number):void {
            _minDepth = value;
        }
        public function get minDepth():Number {
            return _minDepth;
        }

        public function set minLatitude(value:Number):void {
            _minLatitude = value;
        }
        public function get minLatitude():Number {
            return _minLatitude;
        }

        public function set minLongitude(value:Number):void {
            _minLongitude = value;
        }
        public function get minLongitude():Number {
            return _minLongitude;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        public function set noNetCDF(value:Boolean):void {
            _noNetCDF = value;
        }
        public function get noNetCDF():Boolean {
            return _noNetCDF;
        }

        public function set numberOfRecords(value:Number):void {
            _numberOfRecords = value;
        }
        public function get numberOfRecords():Number {
            return _numberOfRecords;
        }

        public function set original(value:Boolean):void {
            _original = value;
        }
        public function get original():Boolean {
            return _original;
        }

        public function set person(value:Person):void {
            _person = value;
        }
        public function get person():Person {
            return _person;
        }

        public function set recordDescription(value:RecordDescription):void {
            _recordDescription = value;
        }
        public function get recordDescription():RecordDescription {
            return _recordDescription;
        }

        public function set resources(value:ListCollectionView):void {
            _resources = value;
        }
        public function get resources():ListCollectionView {
            return _resources;
        }

        public function set startDate(value:Date):void {
            _startDate = value;
        }
        public function get startDate():Date {
            return _startDate;
        }

        public function set uriString(value:String):void {
            _uriString = value;
        }
        public function get uriString():String {
            return _uriString;
        }

        public function set version(value:Number):void {
            _version = value;
        }
        public function get version():Number {
            return _version;
        }

        public function get dateRange():IDateRange {
            return null;
        }

        public function readExternal(input:IDataInput):void {
            _consumers = input.readObject() as ListCollectionView;
            _contentLength = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _creator = input.readObject() as DataProducer;
            _dataContainerGroups = input.readObject() as ListCollectionView;
            _dataContainerType = input.readObject() as String;
            _description = input.readObject() as String;
            _dodsAccessible = input.readObject() as Boolean;
            _dodsUrlString = input.readObject() as String;
            _endDate = input.readObject() as Date;
            _headerDescription = input.readObject() as HeaderDescription;
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _keywords = input.readObject() as ListCollectionView;
            _maxDepth = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _maxLatitude = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _maxLongitude = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _mimeType = input.readObject() as String;
            _minDepth = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _minLatitude = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _minLongitude = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _name = input.readObject() as String;
            _noNetCDF = input.readObject() as Boolean;
            _numberOfRecords = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _original = input.readObject() as Boolean;
            _person = input.readObject() as Person;
            _recordDescription = input.readObject() as RecordDescription;
            _resources = input.readObject() as ListCollectionView;
            _startDate = input.readObject() as Date;
            _uriString = input.readObject() as String;
            _version = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_consumers);
            output.writeObject(_contentLength);
            output.writeObject(_creator);
            output.writeObject(_dataContainerGroups);
            output.writeObject(_dataContainerType);
            output.writeObject(_description);
            output.writeObject(_dodsAccessible);
            output.writeObject(_dodsUrlString);
            output.writeObject(_endDate);
            output.writeObject(_headerDescription);
            output.writeObject(_id);
            output.writeObject(_keywords);
            output.writeObject(_maxDepth);
            output.writeObject(_maxLatitude);
            output.writeObject(_maxLongitude);
            output.writeObject(_mimeType);
            output.writeObject(_minDepth);
            output.writeObject(_minLatitude);
            output.writeObject(_minLongitude);
            output.writeObject(_name);
            output.writeObject(_noNetCDF);
            output.writeObject(_numberOfRecords);
            output.writeObject(_original);
            output.writeObject(_person);
            output.writeObject(_recordDescription);
            output.writeObject(_resources);
            output.writeObject(_startDate);
            output.writeObject(_uriString);
            output.writeObject(_version);
        }
    }
}