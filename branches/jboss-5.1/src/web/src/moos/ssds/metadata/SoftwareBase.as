/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Software.as).
 */

package moos.ssds.metadata {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class SoftwareBase implements IExternalizable, IMetadataObject, IDescription, IResourceOwner {

        private var _description:String;
        private var _id:Number;
        private var _name:String;
        private var _person:Person;
        private var _resources:ListCollectionView;
        private var _softwareVersion:String;
        private var _uriString:String;
        private var _version:Number;

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        public function set person(value:Person):void {
            _person = value;
        }
        public function get person():Person {
            return _person;
        }

        public function set resources(value:ListCollectionView):void {
            _resources = value;
        }
        public function get resources():ListCollectionView {
            return _resources;
        }

        public function set softwareVersion(value:String):void {
            _softwareVersion = value;
        }
        public function get softwareVersion():String {
            return _softwareVersion;
        }

        public function set uriString(value:String):void {
            _uriString = value;
        }
        public function get uriString():String {
            return _uriString;
        }

        public function set version(value:Number):void {
            _version = value;
        }
        public function get version():Number {
            return _version;
        }

        public function readExternal(input:IDataInput):void {
            _description = input.readObject() as String;
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _name = input.readObject() as String;
            _person = input.readObject() as Person;
            _resources = input.readObject() as ListCollectionView;
            _softwareVersion = input.readObject() as String;
            _uriString = input.readObject() as String;
            _version = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_description);
            output.writeObject(_id);
            output.writeObject(_name);
            output.writeObject(_person);
            output.writeObject(_resources);
            output.writeObject(_softwareVersion);
            output.writeObject(_uriString);
            output.writeObject(_version);
        }
    }
}