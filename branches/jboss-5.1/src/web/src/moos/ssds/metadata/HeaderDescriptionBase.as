/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (HeaderDescription.as).
 */

package moos.ssds.metadata {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class HeaderDescriptionBase implements IExternalizable, IMetadataObject {

        private var _byteOffset:Number;
        private var _commentTags:ListCollectionView;
        private var _description:String;
        private var _id:Number;
        private var _numHeaderLines:int;
        private var _version:Number;

        public function set byteOffset(value:Number):void {
            _byteOffset = value;
        }
        public function get byteOffset():Number {
            return _byteOffset;
        }

        [Bindable(event="unused")]
        public function get commentTags():ListCollectionView {
            return _commentTags;
        }

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set numHeaderLines(value:int):void {
            _numHeaderLines = value;
        }
        public function get numHeaderLines():int {
            return _numHeaderLines;
        }

        public function set version(value:Number):void {
            _version = value;
        }
        public function get version():Number {
            return _version;
        }

        public function readExternal(input:IDataInput):void {
            _byteOffset = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _commentTags = input.readObject() as ListCollectionView;
            _description = input.readObject() as String;
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _numHeaderLines = input.readObject() as int;
            _version = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_byteOffset);
            output.writeObject(_commentTags);
            output.writeObject(_description);
            output.writeObject(_id);
            output.writeObject(_numHeaderLines);
            output.writeObject(_version);
        }
    }
}