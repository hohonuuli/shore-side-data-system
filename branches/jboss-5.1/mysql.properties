# These are database specific statements that are needed by the SSDS.  
# Unfortunately there is no single way to do some things for all database 
# types, so you have to configure this manually.  Basically you write the 
# SQL statements that will accomplish the goals for you database and then 
# replace the device ID with @DEVICE_ID@.  The system will then replace that 
# with the actual device ID when running the SQL statement.  Here I give 
# examples for both Microsoft SQL Server and MySQL.

# Database driver file
database.driver.jar.file=mysql-connector-java-5.1.5-bin.jar

# Database driver class
database.driver.class=com.mysql.jdbc.Driver

# Database schema that might be used for some drivers.  For
# example, for MSSQL, you might set it to the username that
# is creating the database (${database.server.login.username})
# and for MySQL, you would leave it blank
database.schema=

# Database source type mapping (tested options are 'MS SQLSERVER2000'|'mySQL')
database.driver.type.mapping=mySQL

# Database connection URL for data storage
data.database.driver.url=jdbc:mysql://${database.server.name}:3306/ssds_data
# Database connection URL for metadata storage
metadata.database.driver.url=jdbc:mysql://${database.server.name}:3306/SSDS_Metadata

# This is the property that tells Hibernate what sql server you
# are using for the metadata persistence.  Some examples are:
# For MS SQL Server = org.hibernate.dialect.SQLServerDialect
# For MySQL = org.hibernate.dialect.MySQLDialect
metadata.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# For MySQL
io.storage.sql.create.device.table=CREATE TABLE `ssds_data`.`@DEVICE_ID@` (`ssdsPacketVersion` INT NOT NULL,`parentID` BIGINT NOT NULL,`packetType` INT NOT NULL,`packetSubType` BIGINT NOT NULL,`dataDescriptionID` BIGINT NOT NULL,`dataDescriptionVersion` BIGINT NOT NULL,`timestampSeconds` BIGINT NOT NULL,`timestampNanoseconds` BIGINT NOT NULL,`sequenceNumber` BIGINT,`bufferLen` INT,`bufferBytes` LONGBLOB,`bufferTwoLen` INT,`bufferTwoBytes` LONGBLOB,`latitude` DECIMAL,`longitude` DECIMAL,`depth` FLOAT) CHARACTER SET utf8;
io.storage.sql.create.device.table.primary.key=ALTER TABLE `ssds_data`.`@DEVICE_ID@` ADD PRIMARY KEY (`parentID`, `packetType`, `packetSubType`, `dataDescriptionID`, `dataDescriptionVersion`, `timestampSeconds`, `timestampNanoseconds`);
io.storage.sql.create.device.table.index=ALTER TABLE `ssds_data`.`@DEVICE_ID@` ADD INDEX IX_Timestamp USING BTREE(`timestampSeconds`, `timestampNanoseconds`);
io.storage.sql.template.find.table=SHOW TABLES LIKE '@DEVICE_ID@'
io.storage.sql.template.count.number.of.rows=SELECT COUNT(*) FROM `ssds_data`.`@DEVICE_ID@`
io.storage.sql.template.count.number.of.rows.with.record.type=SELECT COUNT(*) FROM `ssds_data`.`@DEVICE_ID@` WHERE packetSubType = @RECORD_TYPE@
io.storage.sql.template.latest.timestamp.seconds=SELECT MAX(timestampSeconds) AS maxseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds < @CURRENT_TIMESTAMP_SECONDS@
io.storage.sql.template.latest.timestamp.seconds.with.record.type=SELECT MAX(timestampSeconds) AS maxseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds < @CURRENT_TIMESTAMP_SECONDS@ AND packetSubType = @RECORD_TYPE@
io.storage.sql.template.latest.timestamp.nanoseconds=SELECT MAX(timestampNanoseconds) AS maxnanoseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds = @TIMESTAMP_SECONDS@
io.storage.sql.template.latest.timestamp.nanoseconds.with.record.type=SELECT MAX(timestampNanoseconds) AS maxnanoseconds FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds = @TIMESTAMP_SECONDS@ AND packetSubType = @RECORD_TYPE@
io.storage.sql.template.select.packets.by.time=SELECT * FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds > @START_TIMESTAMP_WINDOW_SECONDS@ AND timestampSeconds < @END_TIMESTAMP_WINDOW_SECONDS@ ORDER BY timestampSeconds ASC, timestampNanoseconds ASC 
io.storage.sql.template.select.packets.by.time.with.record.type=SELECT * FROM `ssds_data`.`@DEVICE_ID@` WHERE timestampSeconds > @START_TIMESTAMP_WINDOW_SECONDS@ AND timestampSeconds < @END_TIMESTAMP_WINDOW_SECONDS@ AND packetSubType = @RECORD_TYPE@ ORDER BY timestampSeconds ASC, timestampNanoseconds ASC 
io.storage.sql.table.delimiter=`
io.storage.sql.lastnumber.preamble=(SELECT * FROM 
io.storage.sql.lastnumber.postamble= ORDER BY timestampSeconds DESC, timestampNanoseconds DESC LIMIT @LAST_NUMBER_OF_PACKETS@) as temptable
