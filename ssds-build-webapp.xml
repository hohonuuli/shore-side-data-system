<?xml version="1.0"?>
<!--
 Copyright 2009 MBARI
 
 Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1 
 (the "License"); you may not use this file except in compliance 
 with the License. You may obtain a copy of the License at
 
 http://www.gnu.org/copyleft/lesser.html
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project name="ssds-build-webapp" default="build" basedir=".">

	<!-- Import various path definitions -->
	<import file="path-defs.xml" />

	<!-- Define the Flex tasks -->
	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />

	<!-- This target checks to see if any dependencies are missing -->
	<target name="check-dependencies">
		<!-- Make sure the client metadata services jar exits -->
		<condition property="metadata.client.generated">
			<available file="${project.dist}/ssds-services-metadata-client.jar" type="file" />
		</condition>
		<fail unless="metadata.client.generated" message="Please make sure the
			ssds-services-metadata-client.jar exists" />
	</target>

	<!-- Do stuff that you want everytime ant is run -->
	<target name="init">
		<!-- Initialize the date/time -->
		<tstamp />
	</target>

	<!-- The clean targets -->
	<target name="clean" depends="init">
		<!-- Remove the build directory for the webapp -->
		<delete dir="${project.build}/webapp" />

		<!-- Rebuild the directory -->
		<mkdir dir="${project.build}/webapp" />

	</target>

	<!-- Compile the webapp source code -->
	<target name="compile" depends="clean">
		<!-- First compile the supporting ActionScript classes
		<compc output="${project.build}/webapp/ssds.swc" include-classes="moos.ssds.metadata.Device moos.ssds.metadata.DataProducer">
			<source-path path-element="${src.web}/src" />
			<compiler.include-libraries dir="${FLEX_HOME}/frameworks/libs" append="true" />
		</compc> -->

		<!-- Run the flex compiler on the explorer MXML file -->
		<mxmlc file="${src.web}/src/explorer.mxml" output="${project.build}/webapp/explorer.swf" context-root="/ssds" services="${resources.build}/flex/WEB-INF/flex/services-config.xml">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
			<source-path path-element="${FLEX_HOME}/frameworks" />
			<!-- List of SWC files or directories that contain SWC files. -->
			<compiler.library-path dir="${FLEX_HOME}/frameworks">
				<include name="**/*.swc" />
			</compiler.library-path>
			<compiler.library-path dir="${src.web}/libs">
				<include name="**/*.swc" />
			</compiler.library-path>
			<!-- <compiler.external-library-path dir="${project.build}/webapp">
			    <include name="**/*.swc" />
			</compiler.external-library-path> -->
		</mxmlc>

	</target>

	<!-- The target to build -->
	<target name="build" description="This will clean all the compiled classes and recompile" depends="clean,compile" />

	<!-- The distribution target -->
	<target name="dist" depends="build" description="Simply runs build since we deploy as exploded WAR" />

	<!-- The target to test the metdata services -->
	<target name="test" depends="init" description="This currently does nothing" />

	<!-- This target removes the exploded WAR file -->
	<target name="undeploy" depends="init">
		<!-- Delete either the directory (if exploded) or file (if not) -->
		<delete dir="${webapp.deployment.location}" />
		<delete file="${webapp.deployment.location}" />
		<!-- Remove the cached version -->
		<delete failonerror="false" dir="${webapp.deployment.cache.location}" />
	</target>

	<!-- Deploy the metadata -->
	<target name="deploy" depends="dist,undeploy" description="This deploys the compiled SWFs and various other assets and pages">

		<!-- Remove and rebuild the web application deployment directory -->
		<mkdir dir="${webapp.deployment.location}" />

		<!-- Create the HTML wrapper assets -->
		<html-wrapper title="SSDS Web Application" file="gen-index.html" swf="explorer" output="${webapp.deployment.location}" />

		<!-- Copy over the Flex assets -->
		<copy todir="${webapp.deployment.location}" overwrite="true">
			<fileset dir="${project.build}/webapp">
				<exclude name="ssds.swc" />
			</fileset>
		</copy>

		<!-- Copy over other assets -->
		<copy todir="${webapp.deployment.location}" overwrite="true">
			<fileset dir="${src.web}/src">
				<include name="**/*" />
				<exclude name="**/*.mxml" />
				<exclude name="**/*.as" />
			</fileset>
		</copy>
	</target>
</project>
