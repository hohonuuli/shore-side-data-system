/**
 * Generated by Gas3 v2.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Resource.as).
 */

package moos.ssds.metadata {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class ResourceBase implements IExternalizable, IMetadataObject, IDescription, IDateRange {

        private var _contentLength:Number;
        private var _description:String;
        private var _endDate:Date;
        private var _id:Number;
        private var _keywords:ListCollectionView;
        private var _mimeType:String;
        private var _name:String;
        private var _person:Person;
        private var _resourceBLOB:ResourceBLOB;
        private var _resourceType:ResourceType;
        private var _startDate:Date;
        private var _uriString:String;
        private var _version:Number;

        public function set contentLength(value:Number):void {
            _contentLength = value;
        }
        public function get contentLength():Number {
            return _contentLength;
        }

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set endDate(value:Date):void {
            _endDate = value;
        }
        public function get endDate():Date {
            return _endDate;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        [Bindable(event="unused")]
        public function get keywords():ListCollectionView {
            return _keywords;
        }

        public function set mimeType(value:String):void {
            _mimeType = value;
        }
        public function get mimeType():String {
            return _mimeType;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        public function set person(value:Person):void {
            _person = value;
        }
        public function get person():Person {
            return _person;
        }

        public function set resourceBLOB(value:ResourceBLOB):void {
            _resourceBLOB = value;
        }
        public function get resourceBLOB():ResourceBLOB {
            return _resourceBLOB;
        }

        public function set resourceType(value:ResourceType):void {
            _resourceType = value;
        }
        public function get resourceType():ResourceType {
            return _resourceType;
        }

        public function set startDate(value:Date):void {
            _startDate = value;
        }
        public function get startDate():Date {
            return _startDate;
        }

        public function set uriString(value:String):void {
            _uriString = value;
        }
        public function get uriString():String {
            return _uriString;
        }

        public function set version(value:Number):void {
            _version = value;
        }
        public function get version():Number {
            return _version;
        }

        public function get dateRange():IDateRange {
            return null;
        }

        public function readExternal(input:IDataInput):void {
            _contentLength = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _description = input.readObject() as String;
            _endDate = input.readObject() as Date;
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _keywords = input.readObject() as ListCollectionView;
            _mimeType = input.readObject() as String;
            _name = input.readObject() as String;
            _person = input.readObject() as Person;
            _resourceBLOB = input.readObject() as ResourceBLOB;
            _resourceType = input.readObject() as ResourceType;
            _startDate = input.readObject() as Date;
            _uriString = input.readObject() as String;
            _version = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_contentLength);
            output.writeObject(_description);
            output.writeObject(_endDate);
            output.writeObject(_id);
            output.writeObject(_keywords);
            output.writeObject(_mimeType);
            output.writeObject(_name);
            output.writeObject(_person);
            output.writeObject(_resourceBLOB);
            output.writeObject(_resourceType);
            output.writeObject(_startDate);
            output.writeObject(_uriString);
            output.writeObject(_version);
        }
    }
}