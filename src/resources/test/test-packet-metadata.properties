# This file contains the information that will be used to construct a data packet 
# to publish to SSDS.  You can see more information about the packet structures at
# this URL: https://oceana.mbari.org/confluence/display/SSDS/Ingest+Architecture

# This basically states that the bytes are coming from a SIAM
# ExportablePacket class. SIAM uses constants defined in the
# org.mbari.siam.distributed.Exportable.java class to enumerate things like
# this and the short value for this is always 0x0100. SSDS Doesn't really
# care so we essentially ignore it.
StreamID=0x0100

# This is the "serialVersionUID" on the class that was used to export the bytes. 
# It is the version of SIAM class that generated the byte array. SSDS Does not 
# really care and as of this writing, it is always 0.
DevicePacketVersion=0

# The ID of the device that the message was generated by.
SourceID=987

# Epoch milliseconds (number of elapsed milliseconds since 1/1/1970 00:00:00) that 
# the packet was generated by the device. For clarity sake, you can define it in 
# ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601)
Timestamp=

# This is the sequence number that will be on the packet. It should reflect the
# index in the order of generation of packets from the source device.
SequenceNumber=1

# This is the reference number that points to the sequence number of the packet
# which contains the metadata that describes the contents of this packet. 
MetadataRef=0

# This is the ID of the parent device (if one exists) that the generating device
# (see SourceID above) was connected to when it generated the packet
ParentID=0

# This is the type of record that is being produced.  Source devices can produce
# multiple types of records of the same type. For example, a device can produce
# data records in multiple formats.  This allows you to identify which format 
# is used for the generated packet.  It serves to link the pre-defined metadata
# to the packet and allows machines and humans to understand the contents of the
# packet.
RecordType=0

# This value determines what type of packet (SIAM equivalent) will be constructed
# using the information in this file.  The available options are:
# 1. METADATA
# 2. SENSOR_DATA
# 3. DEVICE_MESSAGE
SecondStreamID=METADATA

# This indicates which version of the above type of packet will be constructed.
# At the time of this authoring, the only option available is 0 for all three
# types listed above. In theory this would allow you to have multiple forms of
# any of the above types of packets, but it has not been used to date.
SecondPacketVersion=0

# This is the name of the file (located with this properties file) that contains
# the payload of the first buffer.  It will be read as straight bytes into a
# byte buffer. NOTE: with METADATA packets the first buffer contains something
# that is called 'cause' which is not used much by SSDS.  If you want to
# specify the first buffer directly in this file, simply use the property named
# FirstBuffer and it will use that property value's bytes as the byte array
FirstBuffer=test-first-buffer.txt

# This is the name of the file (located with this properties file) that contains
# the payload of the second buffer.  It will be read as straight bytes into a
# byte buffer. NOTE: with METADATA packets the second buffer is usually where the
# main metadata is stored (for example, device XML).  If you want to specify the
# second buffer directly in this file, simply use the property named SecondBuffer
# and it will use that property value's bytes as the byte array.
SecondBuffer=test-second-buffer-metadata.xml
