############################################################################
# Copyright 2009 MBARI                                                     #
#                                                                          #
# Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1        #
# (the "License"); you may not use this file except in compliance          #
# with the License. You may obtain a copy of the License at                #
#                                                                          #
# http://www.gnu.org/copyleft/lesser.html                                  #
#                                                                          #
# Unless required by applicable law or agreed to in writing, software      #
# distributed under the License is distributed on an "AS IS" BASIS,        #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. #
# See the License for the specific language governing permissions and      #
# limitations under the License.                                           #
############################################################################

################################################################
# These properties are the properties that need to be changed  #
# in order to build and deploy SSDS for your installation.     #
# Follow the instructions above each property and it will help #
# guide you to edit them correctly.                            #
################################################################

################################################################
#                     JBoss Properties                         #
################################################################
# SSDS Uses the Flex SDK from Adobe and so the build needs to
# know where your Flex SDK installation.  This is is the path
# to the Flex SDK
FLEX_HOME=/Applications/flex_sdk_3

################################################################
#                     JBoss Properties                         #
################################################################
# This property defines where JBoss is installed.  It must be a directory
# that is reachable by the machine where the build is occurring.  Various
# parts of the SSDS application will be deployed to this installation.
jboss.home=/Applications/jboss-4.2.2.GA

# This property is the name of the server where the jboss installation
# will be running.
jboss.host.name=localhost

# This property defines the base URL that is use to reach the JBoss
# application via HTTP (i.e. through a web browser).  This should be
# the URL that shows the JBoss default page.
jboss.base.url=http://${jboss.host.name}:8080

################################################################
#            JBoss Security (LDAP) Properties                  #
################################################################
# This is the URL for the LDAP provider for your instance.  It
# is not required, but many of the password protected pages
# in the web application will not work without it.  Usually
# this property looks something like:
# ldap://ldap.company.com:389
java.naming.provider.url=ldap://my.ldap.server.com:389
# This is the authentication method used by the LDAP server and
# is often "simple".  Simple is the only one that was tested
# with SSDS.
java.naming.security.authentication=simple
# This is essentially the username of the login that will be
# used for LDAP queries.  It should have authentication to traverse
# the user sections of the LDAP repository
bindDN=
# This is the password for that login
bindCredential=
# This is the base DN for searching for users in the LDAP.  It
# often looks something like:
# CN=Users,DC=domain,DC=company,DC=com
baseCtxDN=
# This is a filter that is often applied to the search in the
# user base.  For active directory it is:
# (sAMAccountName={0})
baseFilter=(sAMAccountName={0})
# This is the base DN for searching for roles in the LDAP.  It
# often looks something like this:
# CN=Users,DC=domain,DC=company,DC=com
rolesCtxDN=
# This is a filter that is often applied to the search in the
# role base.  For active directory it is:
# (sAMAccountName={0})
roleFilter=(sAMAccountName={0})
# This is an attribute that is used to key the search for roles
# For active directory it is:
# memberOf
roleAttributeID=memberOf
# This is a true|false that indicates if the role attribute is
# referred to as a DN.
roleAttributeIsDN=true
# This is the attribute ID that prefixes the role.  For active
# directory it is:
# cn
roleNameAttributeID=cn
# This probably will not need to be changed
roleRecursion=-1
# This will probably not need to be changed
searchScope=ONELEVEL_SCOPE

################################################################
#             JBoss Mail Service Properties                    #
################################################################
# This is the store protocol used (usually pop3)
core.mail.store.protocol=pop3

# This is the transport protocol used (usually smtp)
core.mail.transport.protocol=smtp

# This is the host name (long) of the pop mail server
core.mail.pop3.host=

# This is the host name (long) of the smtp mail server
core.mail.smtp.host=

# This turns on (true) of off (false) the sending of system messages
# from the messaging layer.  It is off by default.
core.mail.system.messages=false

# This is the email address that the SSDS generated emails will come from
core.mail.from=

# This is the email address where the system SSDS messages will be sent to
core.mail.system.messages.to=

# This turns on (true) or off (false) the sending of email to the users
# that are associated with the information in SSDS that are involved in
# the events.  It is off by default (a good idea for now).
core.mail.user.messages=false

# This property tells the build process whether or not to enable
# debugging during compiling of the code.  Usually this is "on"
# for testing/development deployments and "off" for production
# for speed.
debug=on

################################################################
#                SSDS Location Properties                      #
################################################################
# This is the base directory where all of the content will be
# written to.  Content are things like instrument data files, 
# metadata XML files, transmogrify component files, quick look
# plots, etc.  If you want to put them in other places, you can
# override other properties in the project.properties file.
content.directory.location=

# This property is the URL that points to the content.directory.location
# from an HTTP server.  Usually an HTTP server is setup and a
# link is created in the HTTP server to point to this base
# directory so that all the contents of that directory can
# be served over HTTP.  This is the URL that points to that
# directory.  By default it is set to the hostname and then
# the content directory base, but that will most likely need to
# be overridden based on your server configuration.
content.directory.url=http://${jboss.host.name}/

# This property indicates the base URL for the DODS (OPeNDAP)
# server that points to that location as well.
content.directory.dods.url=http://${jboss.host.name}/cgi-bin/nph-dods/

################################################################
#                SSDS Database Properties                      #
################################################################
# This is the name of the database server where the SSDS will 
# write data and metadata
database.server.name=${jboss.host.name}
# This is the type of database server that will be used (options
# are mssql for Microsoft SQL Server or mysql for MySQL)
database.server.type=mysql
# Credentials for the user that will connect to the database
database.server.login.username=
database.server.login.password=
# Database driver file
database.driver.jar.file=mysql-connector-java-5.1.5-bin.jar
#database.driver.jar.file=postgresql-8.3-603.jdbc3.jar
# Database driver class
database.driver.class=com.mysql.jdbc.Driver
#database.driver.class=org.postgresql.Driver
# Database schema that might be used for some drivers.  For
# example, for MSSQL, you might set it to the username that
# is creating the database (${database.server.login.username})
# and for MySQL, you would leave it blank
database.schema=
# Database source type mapping (tested options are 'MS SQLSERVER2000'|'mySQL')
database.driver.type.mapping=mySQL
#database.driver.type.mapping=PostgreSQL
# Database connection URL for data storage
data.database.driver.url=jdbc:mysql://${jboss.host.name}:3306/ssds_data
#data.database.driver.url=jdbc:postgresql://localhost/SSDS_Data
# Database connection URL for metadata storage
metadata.database.driver.url=jdbc:mysql://${jboss.host.name}:3306/SSDS_Metadata
#metadata.database.driver.url=jdbc:postgresql://localhost/SSDS_Metadata

# This is the property that tells Hibernate what sql server you
# are using for the metadata persistence.  Some examples are:
# For MS SQL Server = org.hibernate.dialect.SQLServerDialect
# For MySQL = org.hibernate.dialect.MySQLDialect
metadata.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#metadata.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

################################################################
#                  Other SSDS Properties                       #
################################################################
# This is the MAC (Ethernet) ID of the network card in the
# machine where the metadata services will run.  Theses services
# will create UUID's for devices and the algorithm that is used
# to generate those UUID's needs an MAC address.  It is of the
# form XX:XX:XX:XX:XX:XX.
metadata.dao.host.ethernet.address=
